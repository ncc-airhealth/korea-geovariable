services:
  kg-frontend:
    build:
      context: .
      dockerfile: Dockerfile.bun
    ports:
      - "3000:80"
    restart: unless-stopped
    networks:
      - local-dev
  kg-api:
    build:
      context: .
      dockerfile: Dockerfile.python
    volumes:
      - ./pyproject.toml:/app/pyproject.toml
      - ./celery_app.py:/app/celery_app.py
      - ./tasks.py:/app/tasks.py
      - ./celery_app.py:/app/celery_app.py
      - ./border_based_calculations_by_year.py:/app/border_based_calculations_by_year.py
      - ./point_based_calculations.py:/app/point_based_calculations.py
      - ./main.py:/app/main.py
    develop:
      # Create a `watch` configuration to update the app
      #
      watch:
        # Sync the working directory with the `/app` directory in the container
        - action: sync
          path: .
          target: /app
          # Exclude the project virtual environment
          ignore:
            - .venv/

        # Rebuild the image on changes to the `pyproject.toml`
        - action: rebuild
          path: ./pyproject.toml
    ports:
      - "8000:8080"
    env_file:
      - .env
    depends_on:
      - kg-redis
    command: uv run gunicorn -w 2 -k uvicorn.workers.UvicornWorker main:app --bind 0.0.0.0:8080
    restart: unless-stopped
    networks:
      - local-dev

  kg-worker:
    build:
      context: .
      dockerfile: Dockerfile.python
    volumes:
      - ./pyproject.toml:/app/pyproject.toml
      - ./celery_app.py:/app/celery_app.py
      - ./tasks.py:/app/tasks.py
      - ./celery_app.py:/app/celery_app.py
    develop:
      # Create a `watch` configuration to update the app
      #
      watch:
        # Sync the working directory with the `/app` directory in the container
        - action: sync
          path: .
          target: /app
          # Exclude the project virtual environment
          ignore:
            - .venv/

        # Rebuild the image on changes to the `pyproject.toml`
        - action: rebuild
          path: ./pyproject.toml
    env_file:
      - .env
    networks:
      - local-dev
    depends_on:
      - kg-redis
    command: uv run celery -A celery_app worker --loglevel=info
    restart: unless-stopped

  kg-redis:
    image: redis:latest
    container_name: kg-redis
    ports:
      - "6379:6379"
    networks:
      - local-dev
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1m30s
      timeout: 30s
      retries: 5
      start_period: 30s

networks:
  local-dev:
    name: local-dev
